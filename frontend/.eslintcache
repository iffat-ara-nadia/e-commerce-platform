[{"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\App.js":"3","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\Homescreen.js":"6","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\products.js":"7","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductScreen.js":"11","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\store.js":"12","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\productReducers.js":"13","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\productConstants.js":"14","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\productActions.js":"15","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Message.js":"17","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\CartScreen.js":"18","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\cartReducers.js":"19","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\cartConstants.js":"20","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\cartActions.js":"21","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\userActions.js":"26","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"27","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Input.js":"30","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutNav.js":"32","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"33","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"34","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\orderReducers.js":"35","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\orderConstants.js":"36","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\orderActions.js":"37","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserListScreen.js":"39"},{"size":676,"mtime":1608779549984,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":1857,"mtime":1610376540457,"results":"43","hashOfConfig":"41"},{"size":398,"mtime":1608369393179,"results":"44","hashOfConfig":"41"},{"size":2098,"mtime":1610368065131,"results":"45","hashOfConfig":"41"},{"size":737,"mtime":1608435897239,"results":"46","hashOfConfig":"41"},{"size":2486,"mtime":1608565800160,"results":"47","hashOfConfig":"41"},{"size":945,"mtime":1608643790020,"results":"48","hashOfConfig":"41"},{"size":1579,"mtime":1608643798049,"results":"49","hashOfConfig":"41"},{"size":1656,"mtime":1608846532584,"results":"50","hashOfConfig":"41"},{"size":4884,"mtime":1609041064791,"results":"51","hashOfConfig":"41"},{"size":2140,"mtime":1610360718792,"results":"52","hashOfConfig":"41"},{"size":1507,"mtime":1608856851275,"results":"53","hashOfConfig":"41"},{"size":368,"mtime":1608850297701,"results":"54","hashOfConfig":"41"},{"size":1200,"mtime":1609243743737,"results":"55","hashOfConfig":"41"},{"size":406,"mtime":1608846726514,"results":"56","hashOfConfig":"41"},{"size":280,"mtime":1609130813834,"results":"57","hashOfConfig":"41"},{"size":4063,"mtime":1609985676291,"results":"58","hashOfConfig":"41"},{"size":1996,"mtime":1610051494127,"results":"59","hashOfConfig":"41"},{"size":240,"mtime":1609989896525,"results":"60","hashOfConfig":"41"},{"size":2219,"mtime":1609989966716,"results":"61","hashOfConfig":"41"},{"size":4024,"mtime":1610429187093,"results":"62","hashOfConfig":"41"},{"size":1064,"mtime":1610359608976,"results":"63","hashOfConfig":"41"},{"size":2350,"mtime":1609341720256,"results":"64","hashOfConfig":"41"},{"size":370,"mtime":1609234994914,"results":"65","hashOfConfig":"41"},{"size":5026,"mtime":1610376890753,"results":"66","hashOfConfig":"41"},{"size":3612,"mtime":1610375320731,"results":"67","hashOfConfig":"41"},{"size":5963,"mtime":1610442131225,"results":"68","hashOfConfig":"41"},{"size":2956,"mtime":1609988374814,"results":"69","hashOfConfig":"41"},{"size":508,"mtime":1610003192538,"results":"70","hashOfConfig":"41"},{"size":590,"mtime":1609988085385,"results":"71","hashOfConfig":"41"},{"size":513,"mtime":1609987770189,"results":"72","hashOfConfig":"41"},{"size":1975,"mtime":1610003537772,"results":"73","hashOfConfig":"41"},{"size":5341,"mtime":1610369223302,"results":"74","hashOfConfig":"41"},{"size":2977,"mtime":1610439303843,"results":"75","hashOfConfig":"41"},{"size":802,"mtime":1610348520339,"results":"76","hashOfConfig":"41"},{"size":3350,"mtime":1610438809582,"results":"77","hashOfConfig":"41"},{"size":5242,"mtime":1610106045819,"results":"78","hashOfConfig":"41"},{"size":2420,"mtime":1610434305761,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"cglsxl",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\index.js",[],["167","168"],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\App.js",["169"],"import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from \"./screens/ProductScreen\"\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n    <main className=\"py-3\">\n      <Container>\n      <Route path=\"/orders/:id\" component={OrderScreen} />\n      <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n      <Route path=\"/payment\" component={PaymentScreen} />\n      <Route path=\"/shipping\" component={ShippingScreen} />\n      {/* <Redirect from=\"/login\" to=\"/shipping\"/> */}\n      <Route path=\"/cart/:id?\" component={CartScreen} />{/*i wrote path={\"/cart\"} instead of \"/cart/:id?\" Here id? paramerter must be added coz, this link \n    //can be accessed directly either from cart nav link or addToCart action where id is passed.*/}\n      <Route path=\"/products/:id\" component={ProductScreen} />\n      <Route path=\"/register\" component={RegisterScreen} />\n      <Route path=\"/login\" component={LoginScreen} />\n      <Route path=\"/profile\" component={ProfileScreen} />\n      <Route path=\"/admin/userlist\" component={UserListScreen} />\n      <Route path=\"/\" exact component={HomeScreen } />\n      </Container>\n    </main>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\Homescreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\products.js",[],["170","171"],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\store.js",["172"],"import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport jwtDecode from \"jwt-decode\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productListReducer, productDetailsReducer} from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, \r\n        userUpdateProfileReducer, userListReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer, \r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    myOrderList: myOrderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") \r\n                    ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") \r\n                    ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") \r\n                    ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {} //when to use {} or null..not clear.\r\n\r\n\r\n//How this initial state differs from reducers initial state????????? \r\n//WHY THIS initial state is needed?????\r\nconst initialState = { \r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}  //what's the functionallity of initial state?? so, why do we use reducer\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\CartScreen.js",["173"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport queryString from \"query-string\"\r\nimport { Row, Col, Image, ListGroup, Button, Form, Cart } from \"react-bootstrap\"\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id //\r\n  console.log(productId)\r\n\r\n\r\n  const { qty } = queryString.parse(location.search)\r\n  console.log(qty)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //To grab the piece of state and show it on the screen useSelector is used\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n  console.log(cartItems)\r\n\r\n  useEffect(() => {\r\n      if(productId)\r\n        dispatch(addToCart(productId, qty))\r\n\r\n        // eslint-disable-next-line\r\n  }, [dispatch, productId, qty])\r\n\r\n\r\n  const removeFromCartHandler = (id) => {\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    //   console.log(\"checkout\")\r\n    //if the user is not logged in then should be login otherwise redirected to shipping.\r\n    //redirect: Mosh(app.js)\r\n    history.push(\"/shipping\")\r\n   // history.push(\"/login? redirect=shipping\") THIS REDIRECT LINE DOES NOT WORK ???\r\n   \r\n  }\r\n\r\n  return (\r\n    <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            { cartItems.length === 0 ? <Message>Your cart is empty <Link to= \"/\">Go back</Link></Message> : \r\n                <ListGroup variant=\"flush\">\r\n                   {cartItems.map(item => (\r\n                    <ListGroup.Item key={item._id}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item._id}`}> {item.name} </Link>\r\n                            </Col>\r\n                            <Col md={2}>${item.price}</Col>\r\n                            <Col md={2}>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={item.qty}\r\n                                onChange={(e) => //BUG TO FIX: this isn't work properly TO CHANGE QTY.\r\n                                    dispatch(\r\n                                        addToCart(item._id, Number(e.target.value)))}\r\n                                >\r\n                                    {[...Array(item.countInStock).keys()].map(x => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n            \r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type=\"button\" onClick={() => removeFromCartHandler(item._id)}><i className=\"fas fa-trash\"></i></Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n                   ))}\r\n\r\n                </ListGroup>\r\n            }\r\n        </Col>\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>Subtotal  ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})  items</h3>\r\n                    ${cartItems.reduce((acc, item) => acc + Number(item.qty * item.price), 0).toFixed(2)}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0}\r\n                    onClick={checkoutHandler} >Procced to checkout</Button>\r\n                </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n        </Col>  \r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["174","175"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { getMyOrders } from \"../actions/orderActions\"\r\n\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n \r\n  const[name, setName] = useState('')\r\n  const[email, setEmail] = useState('')\r\n  const[password, setPassword] = useState('')\r\n  const[confirmPassword, setConfirmPassword] = useState('')\r\n  const[message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { user, error } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const myOrderList = useSelector(state => state.myOrderList)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrderList\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) history.push(\"/login\");\r\n    else {\r\n        if(!user.name) {\r\n            dispatch(getUserDetails())\r\n            dispatch(getMyOrders())\r\n        } \r\n        else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n        \r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) //BUG to FIX: Though passwords don't match,user can register & go to homescreen.\r\n        setMessage(\"Passwords don't match!\") //setMessage will fill the message here: const[message, setMessage] = useState(null)\r\n        \r\n        //DISPATCH profile\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password}))  \r\n        //dispatch orders\r\n        dispatch(getMyOrders())    //DATA NOT FETCHED\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <Row>\r\n        <Col md = {3}>\r\n        <h2>User Profile</h2>\r\n       {message && <Message variant=\"danger\">{message}</Message>}\r\n       {error && <Message variant=\"danger\">{error}</Message>}\r\n       {success && <Message variant=\"success\">User Profile Updated</Message>}\r\n\r\n       <Form onSubmit={submitHandler}>\r\n       <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n                <Form.Control \r\n                    type=\"name\" \r\n                    placeholder=\"Enter name\" \r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n                <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\" \r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Password </Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Enter password\" \r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Password </Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm password\" \r\n                    value={confirmPassword}\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button size=\"lg\" type = \"submit\" variant=\"success\"> Update </Button>\r\n      </Form>\r\n        </Col>\r\n        <Col md = {9}>\r\n        <h2 style={{textAlign: \"center\"}}>My Orders</h2>\r\n        {errorOrders ? <Message variant=\"danger\">{errorOrders}</Message> : (\r\n            <Table striped bordered hover responsive className=\"table-sm \">\r\n                <thead>\r\n                    <tr className=\"thead\"> \r\n                        <th>ID</th>\r\n                        {/* <th>DATE</th> */}\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                {/* <td>{order._createdAt.subString(0, 10)}</td> */}\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.subString(0, 10) : (\r\n                                 <i className=\"fas fa-times\" style={{color: 'red'}} ></i>)}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.subString(0, 10) : (\r\n                                 <i className=\"fas fa-times\" style={{color: 'red'}} ></i>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to= {`/order/${order._id}`}>\r\n                                        <Button className=\"btn-success ml-2\">Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n            </Table>\r\n        )}\r\n        </Col>\r\n\r\n    </Row>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Input.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutNav.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PaymentScreen.js",["176"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport Input from \"../components/Input\"\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n//import { renderInput } from \"../utils/renderMethods\"\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const  cart  = useSelector(state=> state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress)\r\n        history.push(\"/shipping\")\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal') \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n       dispatch(savePaymentMethod(paymentMethod))\r\n       history.push(\"/placeorder\")\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <FormContainer>\r\n     <CheckoutSteps step1 step2 step3 />\r\n     <h1>Payment Method</h1>\r\n     <Form onSubmit={submitHandler}>\r\n         {/* here, <Input /> component will not work */}\r\n        <Form.Group>\r\n            <Form.Label as=\"legend\" >Select Method</Form.Label>\r\n         <Col>\r\n          <Form.Check\r\n              name=\"paymentMethod\" \r\n              value=\"PayPal\"\r\n              id=\"PayPal\"\r\n              label=\"PayPal or Credit Card\"\r\n              type=\"radio\"\r\n              checked\r\n              onChange={ e => setPaymentMethod(e.target.value)}  \r\n              />\r\n          <Form.Check\r\n              name=\"paymentMethod\" \r\n              value=\"stripe\"\r\n              id=\"stripe\"\r\n              label=\"Stripe\"\r\n              type=\"radio\"\r\n              onChange={ e => setPaymentMethod(e.target.value)}  \r\n              />\r\n         </Col>\r\n        </Form.Group>\r\n       \r\n         <Button type=\"submit\" variant=\"success\"> Continue </Button>\r\n\r\n       </Form>\r\n     </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["177"],"import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Image, Button, ListGroup, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=> state.cart)\r\n    const orderCreate = useSelector(state=> state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    //Price Calculation\r\n    cart.itemsPrice = Number(cart.cartItems.reduce((acc, item) => \r\n    acc + item.qty * item.price, 0)).toFixed(2)\r\n    \r\n    cart.shippingPrice = Number(cart.itemsPrice > 100 ? 0 : 22).toFixed(2)\r\n    \r\n    cart.taxPrice = Number(0.15 * cart.itemsPrice).toFixed(2)\r\n    \r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(success)\r\n            history.push(`/orders/${order._id}`) //i wrote /order/${order._id} -> that's why, placeorder page didn't show up.\r\n\r\n    // eslint-disable-next-line\r\n    }, [history, success ])\r\n\r\n    const placeOrderHandler = () => {\r\n       dispatch(createOrder({\r\n           orderItems: cart.cartItems,\r\n           shippingAddress: cart.shippingAddress,\r\n           paymentMethod: cart.paymentMethod,\r\n           itemsPrice: cart.itemsPrice,\r\n           shippingPrice: cart.shippingPrice,\r\n           taxPrice: cart.taxPrice,\r\n           totalPrice: cart.totalPrice\r\n          })\r\n       )\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4 />\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address: </strong>\r\n                        {cart.shippingAddress.address},  {cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}  \r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method:  </strong>\r\n                        {cart.paymentMethod}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {cart.cartItems.map(( item, index )=> (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/products/${item._id}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Items</Col>\r\n                        <Col>${ cart.itemsPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Shipping</Col>\r\n                        <Col>${ cart.shippingPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Tax</Col>\r\n                        <Col>${ cart.taxPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Total</Col>\r\n                        <Col>${cart.totalPrice}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    {error && <Message variant=\"danger\"> {error} </Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                   <Button type=\"button\" className=\"btn-block\" \r\n                   disabled={cart.cartItems.length === 0} \r\n                   onClick={placeOrderHandler}>Place Order</Button>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    </Row>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderScreen.js",["178","179","180"],"import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Image, Button, ListGroup, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails } from '../actions/orderActions';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    \r\n    const orderDetails = useSelector(state=> state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n /*    useEffect(() => {\r\n        dispatch(getOrderDetails(orderId))  \r\n    }, []) */\r\n\r\n    //Corrected version: \r\n  //???? /* In the OrderScreen useEffect(), check for the order and also make sure that the order ID matches the ID in the URL. If it does not, then dispatch getOrderDetails() to fetch the most recent order */\r\n    useEffect(() => {\r\n        if(!order || order._id !== orderId) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [order, orderId]) \r\n\r\n  return ( \r\n    loading ? <Loader /> : error ? <Message variant=\"danger\"> {error} </Message> :\r\n    <>\r\n    <h2>Order {order._id}</h2>\r\n     <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p><strong>Name: </strong>\r\n                    <span style={{textTransform: \"capitalize\", color:\"lightSalmon\"}}>\r\n                    { order.user.name }</span></p>\r\n                    <p>\r\n                    <strong>Email: </strong>\r\n                    {/* what does mailto mean? any other way? */}\r\n                    <a href={`mailto: ${order.user.email}`}>{order.user.email}</a>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Address: </strong>\r\n                        {order.shippingAddress.address},  {order.shippingAddress.city}{' '}\r\n                        {order.shippingAddress.postalCode}, {order.shippingAddress.country}  \r\n                    </p>\r\n                   {order.isDelivered ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message> \r\n                    : <Message variant=\"warning\">Not Delivered</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method:  </strong>\r\n                        {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message> : \r\n                    <Message variant=\"danger\">Not Paid</Message>}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {order.orderItems.map(( item, index )=> (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/products/${item._id}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Items</Col>\r\n                        <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Shipping</Col>\r\n                        <Col>${Number(order.shippingPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Tax</Col>\r\n                        <Col>${Number(order.taxPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Total</Col>\r\n                        <Col>${Number(order.totalPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n        </Col>\r\n     </Row>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":17,"nodeType":"187","messageId":"188","endLine":2,"endColumn":25},{"ruleId":"181","replacedBy":"189"},{"ruleId":"183","replacedBy":"190"},{"ruleId":"185","severity":1,"message":"191","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"192","line":5,"column":52,"nodeType":"187","messageId":"188","endLine":5,"endColumn":56},{"ruleId":"185","severity":1,"message":"193","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"194","line":31,"column":20,"nodeType":"187","messageId":"188","endLine":31,"endColumn":33},{"ruleId":"185","severity":1,"message":"195","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":13},{"ruleId":"185","severity":1,"message":"196","line":4,"column":46,"nodeType":"187","messageId":"188","endLine":4,"endColumn":50},{"ruleId":"185","severity":1,"message":"197","line":4,"column":27,"nodeType":"187","messageId":"188","endLine":4,"endColumn":33},{"ruleId":"185","severity":1,"message":"196","line":4,"column":46,"nodeType":"187","messageId":"188","endLine":4,"endColumn":50},{"ruleId":"198","severity":1,"message":"199","line":26,"column":8,"nodeType":"200","endLine":26,"endColumn":24,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["202"],["203"],"'jwtDecode' is defined but never used.","'Cart' is defined but never used.","'Link' is defined but never used.","'loadingOrders' is assigned a value but never used.","'Input' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [dispatch, order, orderId]",{"range":"207","text":"208"},[1065,1081],"[dispatch, order, orderId]"]