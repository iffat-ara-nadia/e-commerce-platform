[{"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\index.js":"1","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\App.js":"3","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\Homescreen.js":"6","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\products.js":"7","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductScreen.js":"11","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\store.js":"12","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\productReducers.js":"13","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\productConstants.js":"14","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\productActions.js":"15","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Message.js":"17","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\CartScreen.js":"18","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\cartReducers.js":"19","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\cartConstants.js":"20","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\cartActions.js":"21","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\LoginScreen.js":"24","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\userActions.js":"26","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\RegisterScreen.js":"27","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProfileScreen.js":"28","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Input.js":"30","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutNav.js":"32","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PaymentScreen.js":"33","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js":"34","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\orderReducers.js":"35","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\orderConstants.js":"36","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\orderActions.js":"37","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserListScreen.js":"39","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserEditScreen.js":"40","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductListScreen.js":"41","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductEditScreen.js":"42","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderListScreen.js":"43","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\SearchBox.js":"44","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Paginate.js":"45","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\ProductCarousel.js":"46","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Meta.js":"47"},{"size":676,"mtime":1608779549984,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":2756,"mtime":1617135887553,"results":"51","hashOfConfig":"49"},{"size":398,"mtime":1608369393179,"results":"52","hashOfConfig":"49"},{"size":2463,"mtime":1616880701085,"results":"53","hashOfConfig":"49"},{"size":737,"mtime":1608435897239,"results":"54","hashOfConfig":"49"},{"size":2486,"mtime":1608565800160,"results":"55","hashOfConfig":"49"},{"size":945,"mtime":1608643790020,"results":"56","hashOfConfig":"49"},{"size":1579,"mtime":1608643798049,"results":"57","hashOfConfig":"49"},{"size":2433,"mtime":1617163029360,"results":"58","hashOfConfig":"49"},{"size":11947,"mtime":1628805299656,"results":"59","hashOfConfig":"49"},{"size":2768,"mtime":1617152812276,"results":"60","hashOfConfig":"49"},{"size":5714,"mtime":1617144331026,"results":"61","hashOfConfig":"49"},{"size":1528,"mtime":1617144078071,"results":"62","hashOfConfig":"49"},{"size":5565,"mtime":1628803887644,"results":"63","hashOfConfig":"49"},{"size":406,"mtime":1608846726514,"results":"64","hashOfConfig":"49"},{"size":280,"mtime":1609130813834,"results":"65","hashOfConfig":"49"},{"size":4065,"mtime":1617175583438,"results":"66","hashOfConfig":"49"},{"size":1996,"mtime":1610051494127,"results":"67","hashOfConfig":"49"},{"size":240,"mtime":1609989896525,"results":"68","hashOfConfig":"49"},{"size":2219,"mtime":1609989966716,"results":"69","hashOfConfig":"49"},{"size":5595,"mtime":1614203864155,"results":"70","hashOfConfig":"49"},{"size":1508,"mtime":1614060249495,"results":"71","hashOfConfig":"49"},{"size":2350,"mtime":1609341720256,"results":"72","hashOfConfig":"49"},{"size":370,"mtime":1609234994914,"results":"73","hashOfConfig":"49"},{"size":7046,"mtime":1614215408493,"results":"74","hashOfConfig":"49"},{"size":3612,"mtime":1610375320731,"results":"75","hashOfConfig":"49"},{"size":5963,"mtime":1617163615557,"results":"76","hashOfConfig":"49"},{"size":2956,"mtime":1609988374814,"results":"77","hashOfConfig":"49"},{"size":508,"mtime":1610003192538,"results":"78","hashOfConfig":"49"},{"size":590,"mtime":1609988085385,"results":"79","hashOfConfig":"49"},{"size":513,"mtime":1609987770189,"results":"80","hashOfConfig":"49"},{"size":1975,"mtime":1610003537772,"results":"81","hashOfConfig":"49"},{"size":5341,"mtime":1610369223302,"results":"82","hashOfConfig":"49"},{"size":4328,"mtime":1616702484037,"results":"83","hashOfConfig":"49"},{"size":1258,"mtime":1616702466451,"results":"84","hashOfConfig":"49"},{"size":4979,"mtime":1616637393181,"results":"85","hashOfConfig":"49"},{"size":7297,"mtime":1616704319575,"results":"86","hashOfConfig":"49"},{"size":2901,"mtime":1614198477986,"results":"87","hashOfConfig":"49"},{"size":3174,"mtime":1614204059452,"results":"88","hashOfConfig":"49"},{"size":4152,"mtime":1617141472596,"results":"89","hashOfConfig":"49"},{"size":6495,"mtime":1616535754604,"results":"90","hashOfConfig":"49"},{"size":2685,"mtime":1616698328230,"results":"91","hashOfConfig":"49"},{"size":852,"mtime":1616877212135,"results":"92","hashOfConfig":"49"},{"size":987,"mtime":1617141396318,"results":"93","hashOfConfig":"49"},{"size":1387,"mtime":1617162629643,"results":"94","hashOfConfig":"49"},{"size":573,"mtime":1617162281009,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"cglsxl",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\index.js",[],["203","204"],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\App.js",["205"],"import React from 'react'\nimport { Route, Redirect, Switch } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from \"./screens/ProductScreen\"\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n    <main className=\"py-3\">\n      <Container>\n      <Switch>\n\n      <Route path=\"/orders/:id\" component={OrderScreen} />\n      <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n      <Route path=\"/payment\" component={PaymentScreen} />\n      <Route path=\"/shipping\" component={ShippingScreen} />\n      {/* <Redirect from=\"/login\" to=\"/shipping\"/> */}\n      <Route path=\"/cart/:id?\" component={CartScreen} />{/*i wrote path={\"/cart\"} instead of \"/cart/:id?\" Here id? paramerter must be added coz, this link \n    //can be accessed directly either from cart nav link or addToCart action where id is passed.*/}\n      <Route path=\"/products/:id\" component={ProductScreen} />\n      <Route path=\"/register\" component={RegisterScreen} />\n      <Route path=\"/login\" component={LoginScreen} />\n      <Route path=\"/profile\" component={ProfileScreen} />\n      <Route path=\"/admin/userlist\" component={UserListScreen} />\n      <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n      <Route path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} />\n      <Route path=\"/admin/productlist\" component={ProductListScreen} />\n      <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n      <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n      <Route path=\"/search/:keyword\" exact  component={HomeScreen} /> {/* WRONG: component={SearchBox} */}\n      <Route path=\"/page/:pageNumber\"  component={HomeScreen} />\n      <Route path=\"/search/:keyword/page/:pageNumber\" exact component={HomeScreen} />\n      <Route path=\"/\" exact component={HomeScreen} />\n      </Switch>\n      </Container>\n    </main>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\Homescreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\products.js",[],["206","207"],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\store.js",["208"],"import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport jwtDecode from \"jwt-decode\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer, productDeleteReducer, productReviewCreateReducer, topRatedProductReducer} from \"./reducers/productReducers\"\r\nimport { cartReducer } from \"./reducers/cartReducers\"\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, \r\n        userUpdateProfileReducer, userListReducer, userUpdateReducer, userDeleteReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, myOrderListReducer, OrderListReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer, \r\n    productDetails: productDetailsReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productReviewCreate: productReviewCreateReducer, //my own writing: productReview: productCreateReviewReducer\r\n    topRatedProducts: topRatedProductReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userDelete: userDeleteReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    myOrderList: myOrderListReducer,\r\n    orderList: OrderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") \r\n                    ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") \r\n                    ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") \r\n                    ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {} //when to use {} or null..not clear.\r\n\r\n\r\n//How this initial state differs from reducers initial state????????? \r\n//WHY THIS initial state is needed?????\r\nconst initialState = { \r\n    cart: { \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}  //what's the functionallity of initial state?? so, why do we use reducer\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\CartScreen.js",["209"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport queryString from \"query-string\"\r\nimport { Row, Col, Image, ListGroup, Button, Form, Cart } from \"react-bootstrap\"\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id //\r\n  console.log(productId)\r\n\r\n\r\n  const { qty } = queryString.parse(location.search)\r\n  console.log(qty)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  //To grab the piece of state and show it on the screen useSelector is used\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n  console.log(cartItems)\r\n\r\n  useEffect(() => {\r\n      if(productId)\r\n        dispatch(addToCart(productId, qty))\r\n\r\n        // eslint-disable-next-line\r\n  }, [dispatch, productId, qty])\r\n\r\n\r\n  const removeFromCartHandler = (id) => {\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    //   console.log(\"checkout\")\r\n    //if the user is not logged in then should be login otherwise redirected to shipping.\r\n    //redirect: Mosh(app.js)\r\n    history.push(\"/shipping\")\r\n   // history.push(\"/login? redirect=shipping\") THIS REDIRECT LINE DOES NOT WORK ???\r\n   \r\n  }\r\n\r\n  return (\r\n    <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            { cartItems.length === 0 ? <Message>Your cart is empty <Link to= \"/\">Go back</Link></Message> : \r\n                <ListGroup variant=\"flush\">\r\n                   {cartItems.map(item => (\r\n                    <ListGroup.Item key={item._id}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item._id}`}> {item.name} </Link>\r\n                            </Col>\r\n                            <Col md={2}>${item.price}</Col>\r\n                            <Col md={2}>\r\n                            <Form.Control \r\n                                as=\"select\" \r\n                                value={item.qty}\r\n                                onChange={(e) => //BUG TO FIX: this doesn't work properly TO CHANGE QTY.\r\n                                    dispatch(\r\n                                        addToCart(item._id, Number(e.target.value)))}\r\n                                >\r\n                                    {[...Array(item.countInStock).keys()].map(x => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n            \r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type=\"button\" onClick={() => removeFromCartHandler(item._id)}><i className=\"fas fa-trash\"></i></Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n                   ))}\r\n\r\n                </ListGroup>\r\n            }\r\n        </Col>\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h3>Subtotal  ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})  items</h3>\r\n                    ${cartItems.reduce((acc, item) => acc + Number(item.qty * item.price), 0).toFixed(2)}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0}\r\n                    onClick={checkoutHandler} >Procced to checkout</Button>\r\n                </ListGroup.Item>\r\n\r\n            </ListGroup>\r\n        </Col>  \r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProfileScreen.js",["210","211"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { getMyOrders } from \"../actions/orderActions\"\r\n\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n \r\n  const[name, setName] = useState('')\r\n  const[email, setEmail] = useState('')\r\n  const[password, setPassword] = useState('')\r\n  const[confirmPassword, setConfirmPassword] = useState('')\r\n  const[message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { user, error } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const myOrderList = useSelector(state => state.myOrderList)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrderList\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) history.push(\"/login\");\r\n    else {\r\n        if(!user.name) {\r\n            dispatch(getUserDetails())\r\n            dispatch(getMyOrders())\r\n        } \r\n        else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n        \r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) //BUG to FIX: Though passwords don't match,user can register & go to homescreen.\r\n        setMessage(\"Passwords don't match!\") //setMessage will fill the message here: const[message, setMessage] = useState(null)\r\n        \r\n        //DISPATCH profile\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password}))  \r\n        //dispatch orders\r\n        dispatch(getMyOrders())    //DATA NOT FETCHED\r\n  }\r\n\r\n  return (\r\n  <>\r\n    <Row>\r\n        <Col md = {3}>\r\n        <h2>User Profile</h2>\r\n       {message && <Message variant=\"danger\">{message}</Message>}\r\n       {error && <Message variant=\"danger\">{error}</Message>}\r\n       {success && <Message variant=\"success\">User Profile Updated</Message>}\r\n\r\n       <Form onSubmit={submitHandler}>\r\n       <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n                <Form.Control \r\n                    type=\"name\" \r\n                    placeholder=\"Enter name\" \r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n                <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\" \r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Password </Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Enter password\" \r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Password </Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm password\" \r\n                    value={confirmPassword}\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button size=\"lg\" type = \"submit\" variant=\"success\"> Update </Button>\r\n      </Form>\r\n        </Col>\r\n        <Col md = {9}>\r\n        <h2 style={{textAlign: \"center\"}}>My Orders</h2>\r\n        {errorOrders ? <Message variant=\"danger\">{errorOrders}</Message> : (\r\n            <Table striped bordered hover responsive className=\"table-sm \">\r\n                <thead>\r\n                    <tr className=\"thead\"> \r\n                        <th>ID</th>\r\n                        {/* <th>DATE</th> */}\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                {/* <td>{order._createdAt.subString(0, 10)}</td> */}\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                 <i className=\"fas fa-times\" style={{color: 'red'}} ></i>)}</td>\r\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                 <i className=\"fas fa-times\" style={{color: 'red'}} ></i>)}</td>\r\n                                <td>\r\n                                    <LinkContainer to= {`/order/${order._id}`}>\r\n                                        <Button className=\"btn-success ml-2\">Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n            </Table>\r\n        )}\r\n        </Col>\r\n\r\n    </Row>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Input.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\CheckoutNav.js",[],["212","213"],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PaymentScreen.js",["214"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport Input from \"../components/Input\"\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n//import { renderInput } from \"../utils/renderMethods\"\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const  cart  = useSelector(state=> state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress)\r\n        history.push(\"/shipping\")\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal') \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n       dispatch(savePaymentMethod(paymentMethod))\r\n       history.push(\"/placeorder\")\r\n    }\r\n    \r\n  return (\r\n    <>\r\n    <FormContainer>\r\n     <CheckoutSteps step1 step2 step3 />\r\n     <h1>Payment Method</h1>\r\n     <Form onSubmit={submitHandler}>\r\n         {/* here, <Input /> component will not work */}\r\n        <Form.Group>\r\n            <Form.Label as=\"legend\" >Select Method</Form.Label>\r\n         <Col>\r\n          <Form.Check\r\n              name=\"paymentMethod\" \r\n              value=\"PayPal\"\r\n              id=\"PayPal\"\r\n              label=\"PayPal or Credit Card\"\r\n              type=\"radio\"\r\n              checked\r\n              onChange={ e => setPaymentMethod(e.target.value)}  \r\n              />\r\n          <Form.Check\r\n              name=\"paymentMethod\" \r\n              value=\"stripe\"\r\n              id=\"stripe\"\r\n              label=\"Stripe\"\r\n              type=\"radio\"\r\n              onChange={ e => setPaymentMethod(e.target.value)}  \r\n              />\r\n         </Col>\r\n        </Form.Group>\r\n       \r\n         <Button type=\"submit\" variant=\"success\"> Continue </Button>\r\n\r\n       </Form>\r\n     </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\PlaceOrderScreen.js",["215"],"import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Image, Button, ListGroup, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=> state.cart)\r\n    const orderCreate = useSelector(state=> state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    //Price Calculation\r\n    cart.itemsPrice = Number(cart.cartItems.reduce((acc, item) => \r\n    acc + item.qty * item.price, 0)).toFixed(2)\r\n    \r\n    cart.shippingPrice = Number(cart.itemsPrice > 100 ? 0 : 22).toFixed(2)\r\n    \r\n    cart.taxPrice = Number(0.15 * cart.itemsPrice).toFixed(2)\r\n    \r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n    \r\n\r\n    useEffect(() => {\r\n        if(success)\r\n            history.push(`/orders/${order._id}`) //i wrote /order/${order._id} -> that's why, placeorder page didn't show up.\r\n\r\n    // eslint-disable-next-line\r\n    }, [history, success ])\r\n\r\n    const placeOrderHandler = () => {\r\n       dispatch(createOrder({\r\n           orderItems: cart.cartItems,\r\n           shippingAddress: cart.shippingAddress,\r\n           paymentMethod: cart.paymentMethod,\r\n           itemsPrice: cart.itemsPrice,\r\n           shippingPrice: cart.shippingPrice,\r\n           taxPrice: cart.taxPrice,\r\n           totalPrice: cart.totalPrice\r\n          })\r\n       )\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4 />\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address: </strong>\r\n                        {cart.shippingAddress.address},  {cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}  \r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method:  </strong>\r\n                        {cart.paymentMethod}\r\n                    </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {cart.cartItems.map(( item, index )=> (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/products/${item._id}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Items</Col>\r\n                        <Col>${ cart.itemsPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Shipping</Col>\r\n                        <Col>${ cart.shippingPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Tax</Col>\r\n                        <Col>${ cart.taxPrice }</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Total</Col>\r\n                        <Col>${cart.totalPrice}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    {error && <Message variant=\"danger\"> {error} </Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                   <Button type=\"button\" className=\"btn-block\" \r\n                   disabled={cart.cartItems.length === 0} \r\n                   onClick={placeOrderHandler}>Place Order</Button>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n    </Row>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderScreen.js",["216","217","218","219"],"import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Image, Button, ListGroup, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET} from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({ history, match }) => {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)   ///WRONG: state(() => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const orderDetails = useSelector(state=> state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    //PROBLEM: Initially shows order details of previous user (to Admin user). After reloading the page, it shows the clicked user order details. \r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n /*    useEffect(() => {\r\n        dispatch(getOrderDetails(orderId))  \r\n    }, []) */\r\n\r\n    //Corrected version: \r\n  //???? /* In the OrderScreen useEffect(), check for the order and also make sure that the order ID matches the ID in the URL. If it does not, then dispatch getOrderDetails() to fetch the most recent order */\r\n    useEffect(() => {\r\n       if(!userInfo)\r\n          history.pushState('/login')\r\n\r\n        //Basically RESET the screen \r\n        if(!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver]) //I MISSED 'dispatch' as dependency of useEffect.\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    /* I wrote dispatch(ORDER_PAY_RESET)   dispatch(ORDER_DELIVER_RESET) INSTEAD OF \r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET }) SO I GOT:\r\n   Uncaught Error: Actions must be plain objects. Use custom middleware for async actions.\r\n    ▶ 32 stack frames were collapsed.\r\n    This screen is visible only in development. It will not appear if the app crashes in production.\r\n    Open your browser’s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message\r\n    */\r\n\r\n  return ( \r\n    loading ? <Loader /> : error ? <Message variant=\"danger\"> {error} </Message> :\r\n    <>\r\n    <h2>Order {order._id}</h2>\r\n     <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p><strong>Name: </strong>\r\n                    <span style={{textTransform: \"capitalize\", color:\"lightSalmon\"}}>\r\n                    { order.user.name }</span></p>\r\n                    <p>\r\n                    <strong>Email: </strong>\r\n                    {/* what does mailto mean? any other way? */}\r\n                    <a href={`mailto: ${order.user.email}`}> {order.user.email} </a>\r\n                    </p>\r\n                    <p>\r\n                        <strong>Address: </strong>\r\n                        {order.shippingAddress.address},  {order.shippingAddress.city}{' '}\r\n                        {order.shippingAddress.postalCode}, {order.shippingAddress.country}  \r\n                    </p>\r\n                   {order.isDelivered ? <Message variant=\"success\">Delivered on { order.deliveredAt.substring(0, 10)}</Message> \r\n                    : <Message variant=\"warning\">Not Delivered</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>Method:  </strong>\r\n                        {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message> : \r\n                    <Message variant=\"danger\">Not Paid</Message>}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                        <ListGroup variant=\"flush\">\r\n                            {order.orderItems.map(( item, index )=> (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/products/${item._id}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Items</Col>\r\n                        <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Shipping</Col>\r\n                        <Col>${Number(order.shippingPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Tax</Col>\r\n                        <Col>${Number(order.taxPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Row>\r\n                        <Col>Total</Col>\r\n                        <Col>${Number(order.totalPrice).toFixed(2)}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                {loadingDeliver && <Loader />}\r\n                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                    <ListGroup.Item>\r\n                        <Button type=\"button\" className=\"btn btn-block btn-info\" \r\n                        onClick = {deliverHandler}> Mark As Delivered </Button>\r\n                    </ListGroup.Item>\r\n\r\n                )}\r\n\r\n            </ListGroup>\r\n        </Col>\r\n     </Row>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\UserEditScreen.js",["220","221","222"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\"; //this one's exception.\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n \r\n  const[name, setName] = useState('')\r\n  const[email, setEmail] = useState('')\r\n  const[isAdmin, setIsAdmin] = useState(false)\r\n \r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, user } = userDetails\r\n  //console.log(user)\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const {loading, success:successUpdate, error:updateError } = userUpdate\r\n\r\n  useEffect(() => {\r\n      if(successUpdate) {\r\n          dispatch({ type: USER_UPDATE_RESET}) //????????WHY??\r\n          history.push('/admin/userList')\r\n      } else { //???\r\n          if(!user.name || user._id !== userId) {\r\n              //user.name used as a checking for one of the fields.\r\n            dispatch(getUserDetails(userId))\r\n          } else {\r\n              setName(user.name)  //wrong: setName: user.name\r\n              setEmail(user.email)\r\n              setIsAdmin(user.isAdmin)\r\n          } \r\n      }\r\n  }, [dispatch, history, user, userId, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n\r\n        \r\n  }\r\n\r\n  return (\r\n  <> \r\n    <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n    </Link>\r\n    <FormContainer>\r\n       <h1>Edit User</h1>\r\n       <Form onSubmit={submitHandler}>\r\n       <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n                <Form.Control \r\n                    type=\"name\" \r\n                    placeholder=\"Enter name\" \r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n                <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Enter email\" \r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"isAdmin\">\r\n            <Form.Label>Email address</Form.Label>\r\n                <Form.Check \r\n                    type=\"checkbox\" \r\n                    label=\"Is Admin\"\r\n                    checked={isAdmin}\r\n                    onChange={e => setIsAdmin(e.target.checked)}\r\n                    ></Form.Check>\r\n        </Form.Group>\r\n        <Button size=\"lg\" type = \"submit\" variant=\"success\"> Update </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen;\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductListScreen.js",["223","224","225","226"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Table, Button, Row, Col, Pagination } from 'react-bootstrap';\r\nimport Message from \"../components/Message\";\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from './../constants/productConstants';\r\nimport Paginate from \"../components/Paginate\"\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const productList = useSelector(state=> state.productList)\r\n  const { products, page, pages, error } = productList\r\n\r\n  const productDelete = useSelector(state=> state.productDelete)\r\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete\r\n\r\n  const productCreate = useSelector(state=> state.productCreate)\r\n  const { loading: loadingCreate, \r\n         success: successCreate, \r\n         error: errorCreate,\r\n         product: createdProduct } = productCreate\r\n\r\n  const userLogin = useSelector(state=> state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n     dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n      if(!userInfo.isAdmin)\r\n        history.push('/login') //if not admin then redirect to login\r\n\r\n      if(successCreate) {\r\n        history.push(`/admin/product/${createdProduct._id}/edit`)\r\n      } else {\r\n        dispatch(listProducts('', pageNumber))\r\n      }\r\n         \r\n  }, [dispatch, history, userInfo, successCreate, createdProduct, successDelete, pageNumber])\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct()) \r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n      if(window.confirm('Are you sure?'))   {//alternate way of window.confirm??\r\n        dispatch(deleteProduct(id))\r\n      }\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Row className=\"align-items-center\"> \r\n            <Col>\r\n                <h1> Products </h1>\r\n            </Col>\r\n\r\n            <Col className=\"text-right\">\r\n                <Button className=\"my-3\" onClick={createProductHandler}>\r\n                    <i className=\"fas fa-plus\"></i> Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {errorDelete && <Message variant=\"danger\" > { errorDelete }</Message>}\r\n        { error ? <Message variant=\"red\">{error}</Message> : (\r\n          <>\r\n            <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>NAME</th>\r\n                    <th>PRICE</th>\r\n                    <th>CATEGORY</th>\r\n                    <th>BRAND</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { products.map(product => (\r\n                    <tr key={product._id}>\r\n                        <td>{product._id}</td>\r\n                        <td>{product.name}</td>\r\n                        <td> ${product.price}</td>\r\n                        <td>{product.category}</td>\r\n                        <td>{product.brand}</td>\r\n                        <td>\r\n                         <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                            <Button variant=\"light\" className=\"btn-sm mr-2\">\r\n                                <i className=\"fas fa-edit\"></i>\r\n                            </Button> \r\n                         </LinkContainer>\r\n                            \r\n                        <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\r\n                            <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                        </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody> \r\n            </Table>\r\n            <Paginate \r\n               pages={pages}\r\n               pageNumber={page}\r\n               isAdmin={true}\r\n            />\r\n          </>\r\n        )} \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\ProductEditScreen.js",["227","228"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'; //error: userActions\r\nimport { PRODUCT_UPDATE_RESET } from './../constants/productConstants';\r\n\r\n\r\nconst ProductEditScreen  = ({ match, history }) => {\r\n  const productId = match.params.id\r\n \r\n  const[name, setName] = useState('')\r\n  const[price, setPrice] = useState(0)\r\n  const[image, setImage] = useState('')\r\n  const[brand, setBrand] = useState('')\r\n  const[category, setCategory] = useState('')\r\n  const[countInStock, setCountInStock] = useState(0)\r\n  const[description, setDescription] = useState('')\r\n  //const[uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { error, product } = productDetails\r\n\r\n  const productUpdate = useSelector(state => state.productUpdate)\r\n  const { error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n  useEffect(() => {\r\n    if(successUpdate){\r\n        dispatch({ type: PRODUCT_UPDATE_RESET})\r\n         history.push('/admin/productlist')\r\n    } else {\r\n        if(!product.name || product._id !== productId) {\r\n            //product.name used as a checking for one of the fields.\r\n            dispatch(listProductDetails(productId))\r\n            } else {\r\n                  setName(product.name)  //wrong: setName: product.name\r\n                  setPrice(product.price)\r\n                  setImage(product.image)\r\n                  setBrand(product.brand)\r\n                  setCategory(product.category)\r\n                  setCountInStock(product.countInStock)\r\n                  setDescription(product.description)\r\n            } \r\n    } \r\n     \r\n  }, [dispatch, history, product, productId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n      const file = e.target.files[0]\r\n      const formData = new FormData()\r\n      formData.append('image', file)\r\n      //setUploading(true)\r\n\r\n      try {\r\n          const config = {\r\n              headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n              }\r\n          }\r\n\r\n          const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n          setImage(data)\r\n          //setUploading(false)\r\n      } catch (error) {\r\n          console.error(error)\r\n          //setUploading(false)  \r\n      }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        //UPDATE PRODUCT \r\n        dispatch(updateProduct({\r\n             _id: productId,\r\n             name, price, image, brand, category, description, countInStock        \r\n             \r\n             /* WRONG: name: product.name,\r\n                            price: product.price,\r\n                            image: product.image,\r\n                            brand: product.brand,\r\n                            category: product.category,\r\n                            countInStock: product.countInStock,\r\n                            description: product.description */ \r\n            \r\n        }))           \r\n  }\r\n\r\n  return (\r\n  <> \r\n    <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n    </Link>\r\n    <FormContainer>\r\n       <h1>Edit Product</h1>\r\n       <Form onSubmit={submitHandler}>\r\n       <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n                <Form.Control \r\n                    type=\"name\" \r\n                    placeholder=\"Enter product name\" \r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n       <Form.Group controlId=\"price\">\r\n            <Form.Label>Price</Form.Label>\r\n                <Form.Control \r\n                    type=\"number\" \r\n                    placeholder=\"Enter product price\" \r\n                    value={price}\r\n                    onChange={e => setPrice(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>\r\n                <Form.Control \r\n                    type=\"text\"  //file upload\r\n                    placeholder=\"Enter image url\" //image url (is new)\r\n                    value={image}\r\n                    onChange={e => setImage(e.target.value)}\r\n                    >\r\n                </Form.Control>\r\n                <Form.File id=\"image-file\" label=\"Choose File\" \r\n                custom onChange={uploadFileHandler}></Form.File>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"brand\">\r\n            <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\" \r\n                    placeholder=\"Enter brand\"\r\n                    value={brand}\r\n                    onChange={e => setBrand(e.target.value)}\r\n                ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"category\">\r\n            <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\" \r\n                    placeholder=\"Enter category\"\r\n                    value={category}\r\n                    onChange={e => setCategory(e.target.value)}\r\n                ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"countInStock\">\r\n            <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                    type=\"number\" \r\n                    placeholder=\"Enter countInStock\"\r\n                    value={countInStock}\r\n                    onChange={e => setCountInStock(e.target.value)}\r\n                ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\" \r\n                    placeholder=\"Enter description\"\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n        </Form.Group>\r\n        <Button size=\"lg\" type = \"submit\" variant=\"success\"> Update </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen ;\r\n","C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Administrator\\Documents\\Udemy MERN Course\\proshop\\frontend\\src\\components\\Meta.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":2,"column":17,"nodeType":"235","messageId":"236","endLine":2,"endColumn":25},{"ruleId":"229","replacedBy":"237"},{"ruleId":"231","replacedBy":"238"},{"ruleId":"233","severity":1,"message":"239","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":17},{"ruleId":"233","severity":1,"message":"240","line":5,"column":52,"nodeType":"235","messageId":"236","endLine":5,"endColumn":56},{"ruleId":"233","severity":1,"message":"241","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"242","line":31,"column":20,"nodeType":"235","messageId":"236","endLine":31,"endColumn":33},{"ruleId":"229","replacedBy":"243"},{"ruleId":"231","replacedBy":"244"},{"ruleId":"233","severity":1,"message":"245","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":13},{"ruleId":"233","severity":1,"message":"246","line":4,"column":46,"nodeType":"235","messageId":"236","endLine":4,"endColumn":50},{"ruleId":"233","severity":1,"message":"246","line":4,"column":46,"nodeType":"235","messageId":"236","endLine":4,"endColumn":50},{"ruleId":"233","severity":1,"message":"247","line":7,"column":27,"nodeType":"235","messageId":"236","endLine":7,"endColumn":35},{"ruleId":"233","severity":1,"message":"248","line":24,"column":22,"nodeType":"235","messageId":"236","endLine":24,"endColumn":32},{"ruleId":"249","severity":1,"message":"250","line":45,"column":8,"nodeType":"251","endLine":45,"endColumn":62,"suggestions":"252"},{"ruleId":"233","severity":1,"message":"253","line":19,"column":11,"nodeType":"235","messageId":"236","endLine":19,"endColumn":16},{"ruleId":"233","severity":1,"message":"254","line":23,"column":10,"nodeType":"235","messageId":"236","endLine":23,"endColumn":17},{"ruleId":"233","severity":1,"message":"255","line":23,"column":48,"nodeType":"235","messageId":"236","endLine":23,"endColumn":59},{"ruleId":"233","severity":1,"message":"256","line":4,"column":35,"nodeType":"235","messageId":"236","endLine":4,"endColumn":45},{"ruleId":"233","severity":1,"message":"257","line":19,"column":20,"nodeType":"235","messageId":"236","endLine":19,"endColumn":33},{"ruleId":"233","severity":1,"message":"258","line":22,"column":20,"nodeType":"235","messageId":"236","endLine":22,"endColumn":33},{"ruleId":"233","severity":1,"message":"259","line":24,"column":17,"nodeType":"235","messageId":"236","endLine":24,"endColumn":28},{"ruleId":"233","severity":1,"message":"253","line":26,"column":11,"nodeType":"235","messageId":"236","endLine":26,"endColumn":16},{"ruleId":"233","severity":1,"message":"260","line":29,"column":18,"nodeType":"235","messageId":"236","endLine":29,"endColumn":29},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["261"],["262"],"'jwtDecode' is defined but never used.","'Cart' is defined but never used.","'Link' is defined but never used.","'loadingOrders' is assigned a value but never used.",["261"],["262"],"'Input' is defined but never used.","'Card' is defined but never used.","'payOrder' is defined but never used.","'loadingPay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["263"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'updateError' is assigned a value but never used.","'Pagination' is defined but never used.","'loadingDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"266","text":"267"},[1959,2013],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]